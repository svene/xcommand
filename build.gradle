project.ext {
	VERSION_JAVACC = '7.0.10'
	DEP_JANINO = 'org.codehaus.janino:janino:3.1.4'
	DEP_JAVASSIST = 'jboss:javassist:3.8.0.GA'
	DEP_JAVACC = "net.java.dev.javacc:javacc:${VERSION_JAVACC}"

	DEP_GROOVY = 'org.codehaus.groovy:groovy:3.0.8'
	DEP_SPOCK_BOM = 'org.spockframework:spock-bom:2.0-groovy-3.0'
	DEP_SPOCK_CORE = 'org.spockframework:spock-core'
}

allprojects {
	apply plugin: 'java'
	apply plugin: 'groovy'

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.slf4j:slf4j-api:1.7.30'
		implementation 'org.slf4j:slf4j-simple:1.7.30'
		testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
		testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
		testImplementation 'org.assertj:assertj-core:3.19.0'
		testImplementation "org.mockito:mockito-core:3.10.0"
		testImplementation "org.mockito:mockito-junit-jupiter:3.10.0"
	}

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	task ('copyToLib', type: Copy) {
		into('build/_artifacts')
		from configurations.compileClasspath
		from configurations.default.allArtifacts*.file
		from configurations.compileClasspath.allArtifacts*.file
	}

	task renameJCC(type: Copy, dependsOn: 'copyToLib') {
		from("build/_artifacts/javacc-${VERSION_JAVACC}.jar")
		into('build/_artifacts')
		rename("javacc-${VERSION_JAVACC}.jar", 'javacc.jar')
	}

	test {
		useJUnitPlatform {
//        	includeEngines 'junit-jupiter' // enabling this line causes spock tests not to be executed
		}
		testLogging {
			events /*'passed',*/ 'skipped', 'failed'
		}
	}
}
version = '1.0'

