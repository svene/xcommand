plugins {
	id 'buildlogic.java-library-conventions'
	alias(libs.plugins.versions)
	alias(libs.plugins.errorprone)
	alias(libs.plugins.spotless)
}
import net.ltgt.gradle.errorprone.CheckSeverity

tasks.withType(JavaCompile) {
	options.errorprone {
		//disableAllChecks
		check("NullAway", CheckSeverity.ERROR)
		option("NullAway:AnnotatedPackages", "org.xcommand")
		option("NullAway:ExcludedClassAnnotations", "javax.annotation.processing.Generated")
		option("NullAway:KnownInitializers", "org.xcommand.web.WebCVInitializationFilter.init")
	}
	// Include to disable NullAway on test code
	if (name.toLowerCase().contains("test")) {
		options.errorprone {
			disable("NullAway")
		}
	}
}
configurations {
	mockitoAgent
}
spotless {
	java {
		palantirJavaFormat()
		targetExclude("build/**")
	}
}

dependencies {
	annotationProcessor libs.errorprone.core
	errorprone libs.nullaway
	api libs.jspecify
	errorprone libs.errorprone.core
	implementation libs.jool
	annotationProcessor libs.recordbuilder.processor
	compileOnly libs.recordbuilder.core
	implementation libs.dynamicproxies.core
	implementation libs.janino.janino
	implementation libs.servlet.api

	implementation(platform(DEP_SPRING_FW_BOM))
	implementation libs.spring.core
	implementation libs.spring.web

	testImplementation libs.spring.test
	testImplementation libs.assertj.core
	testImplementation libs.mockito.core
	testImplementation libs.mockito.junit.jupiter
	mockitoAgent(libs.mockito.core) {
		transitive = false
	}
}

// ben-manes version-plugin:
def isNonStable = { String version ->
	def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
	def regex = /^[0-9,.v-]+(-r)?$/
	return !stableKeyword && !(version ==~ regex)
}
// https://github.com/ben-manes/gradle-versions-plugin
tasks.named("dependencyUpdates").configure {
	rejectVersionIf {
		isNonStable(it.candidate.version)
	}
}
tasks {
	test {
		jvmArgs += "-javaagent:${configurations.mockitoAgent.asPath}"
	}
}
